{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","Lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setalert","message","setTimeout","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ca63ad84.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n          {/* </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input \"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}` }htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard\", \"success\");\r\n\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onchange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // text = 'new test' wrong way\r\n  // setText(\"new text\") correct way\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'#454544'}}>\r\n        <h1>{props.heading}</h1>\r\n\r\n        <div className=\"mb-3 my-1\">\r\n          <label\r\n            htmlFor=\"exampleFormControlTextarea1\"\r\n            className=\"form-label\"\r\n            // style={{color: props.mode==='dark'?'white':'black'}}\r\n          ></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{backgroundColor: props.mode==='dark'?'black':'white', color :props.mode==='dark'?'white':'#454544'}}\r\n          ></textarea>\r\n          \r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert To Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#454544'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} char\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:'Enter something ro preview here.'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const Lower = word.toLowerCase();\r\n        return Lower.charAt(0).toUpperCase() + Lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n           \r\n        <strong>{capitalize(props.alert.type)}</strong>  {props.alert.msg}\r\n       \r\n      </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./Components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n// let name = 'harry';\n \nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enavble or niot\n\n  const [alert, setalert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setalert({\n      msg: message, \n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n\n  const toggleMode  = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.background = '#454544';\n      showAlert('dark mode has benn enabled', \"success\")\n      document.title = 'Text Player - Dark Mode'\n      // setInterval(() => {\n      //   document.title = 'Text Player - is amazing'\n\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = 'Text Player - install now'\n        \n      // }, 1500);\n    }\n    else{\n      setMode('light')\n      document.body.style.background = 'white';\n      showAlert('light mode has benn enabled', \"success\")\n      document.title = 'Text Player - Light Mode'\n\n\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"React App Blog\" aboutText=\"About\"/> */}\n      {/* <Navbar/> */}\n      {/* <Router> */}\n      <Navbar title=\"Text Player\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n        \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>\n\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n        \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}